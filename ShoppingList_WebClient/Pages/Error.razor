@using Blazored.LocalStorage
@using ShoppingList_WebClient.Data
@*@using Microsoft.AspNetCore.Hosting*@
@*@using Microsoft.Extensions.Hosting*@

@inject IToastService _toastService

@inject NavigationManager navigationManager
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider authenticationStateProvider

<ErrorBoundary>
    <ChildContent>

        <CascadingValue Value=this>
            @ChildContent
        </CascadingValue>
    </ChildContent>
    <ErrorContent>
        @{
            navigationManager.NavigateTo("/", true);
        }
    </ErrorContent>
</ErrorBoundary>
@code
{

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public void ProcessError(Exception ex)
    {
        //if (!_webHostEnvironment.IsDevelopment())
        //    _toastService.ShowError("Somting went wrong");
        //else
        _toastService.ShowError("Somting went wrong - check log"+ ex.Message);

    }

    public void ProcessExceptionAsync(Exception ex)
    {

        if (ex is HttpRequestException e && e.StatusCode == System.Net.HttpStatusCode.Unauthorized)
        {
            //await localStorage.RemoveItemAsync("accessToken");

            ((CustomAuthenticationStateProvider)authenticationStateProvider).MarkUserAsLoggedOut();

            _toastService.ShowError("Authentication problem.");
        }
    }
}